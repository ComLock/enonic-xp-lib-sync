buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'http://repo.enonic.com/public' }
        //maven { url 'https://dl.bintray.com/rbrastad/enonic' }
    }

    dependencies {
        classpath "com.enonic.xp:gradle-plugin:${xpVersion}"
    }
}

plugins {
  id "com.moowork.node" version "0.12"
  id "com.moowork.gulp" version "0.12"
  id "me.taku_k.yarn" version "0.1.3"
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'http://repo.enonic.com/public' }
    maven { url 'https://dl.bintray.com/rbrastad/enonic' }
}

//──────────────────────────────────────────────────────────────────────────────
// Yarn
//──────────────────────────────────────────────────────────────────────────────
yarn {
    version = '0.18.1'
}

yarnInstall.dependsOn += yarnSetup

//──────────────────────────────────────────────────────────────────────────────
// classname: AppPlugin
// defines: app, include, compile, runtime, build, jar, sourceSets
//──────────────────────────────────────────────────────────────────────────────
apply plugin: 'com.enonic.xp.app'

app {
    name = project.appName
    displayName = project.displayName
    vendorName = 'Enonic AS'
    vendorUrl = 'http://enonic.com'
}

node {
    version = '7.6.0'
    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

dependencies {
    compile "com.enonic.xp:core-api:${xpVersion}"
    compile "com.enonic.xp:portal-api:${xpVersion}"

    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-io:${xpVersion}"
    include "com.enonic.xp:lib-node:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-repo:${xpVersion}"
    include "com.enonic.xp:lib-task:${xpVersion}"
    include "com.enonic.xp:lib-thymeleaf:${xpVersion}"

    include 'com.enonic.lib:lib-sql:0.6.0'
    include 'com.enonic.lib:util:1.1.1'
    include 'com.oracle:ojdbc6:12.1.0.1-atlassian-hosted'
    webjar 'org.webjars:react:0.14.7'

    include 'no.rbrastad.enonic.lib:filesystem:0.5.1'
    include 'commons-net:commons-net:3.3'

    //include "com.enonic.xp:lib-xslt:${xpVersion}"
    //include "com.enonic.xp:lib-mustache:${xpVersion}"
    //include "com.enonic.xp:lib-i18n:${xpVersion}"
    //include "com.enonic.xp:lib-auth:${xpVersion}"
    //include "com.enonic.xp:lib-cache:${xpVersion}"
    //include "com.enonic.xp:lib-context:${xpVersion}"
    //include "com.enonic.xp:lib-http-client:${xpVersion}"
    //include "com.enonic.xp:lib-mail:${xpVersion}"
    //include "com.enonic.xp:lib-websocket:${xpVersion}"
}

//──────────────────────────────────────────────────────────────────────────────
// Gulp
//──────────────────────────────────────────────────────────────────────────────

task gulp_build(type: GulpTask, dependsOn: 'installGulp') {
    description = 'Build for production using gulp'
    args = ["--color", "--gulpfile", "gulpfile.babel.js", "prod"]
}


// TODO: Does gulp watch block for gradle continous?
task gulp_watch(type: GulpTask, dependsOn: 'installGulp') {
    description = 'Build for development and watch using gulp'
    args = ["--color", "--gulpfile", "gulpfile.babel.js", "watch"]
}

gulp {
    // Set the directory where gulpfile.js should be found
    workDir = file("${project.projectDir}")
    // Whether colors should output on the terminal
    colors = true
}

// processes your package.json before running gulp build
//gulp_build.dependsOn 'npmInstall'
gulp_build.dependsOn yarnInstall

// runs "gulp build" as part of your gradle build
build.dependsOn 'gulp_build'
build.mustRunAfter 'gulp_build'

//──────────────────────────────────────────────────────────────────────────────
// Let gulp handle everything except compiling java
//──────────────────────────────────────────────────────────────────────────────

tasks.withType(Copy) {
  includeEmptyDirs = false
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            exclude '*'
        }
    }
}
